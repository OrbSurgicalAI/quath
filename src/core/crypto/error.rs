#[derive(thiserror::Error, Debug)]
pub enum ServerProtocolError {
    #[error("Failed to verify the signature attached to the token.")]
    FailedToVerifyTokenSignature,
    #[error("Failed to encapsulation the key.")]
    EncapsulationFailed,
    #[error("Failed to sign a response.")]
    FailedToSignResponse,
    #[error("Failed to verify that the client cycling actually owns the new key.")]
    FailedToVerifyNewCycleKey,
    #[error("Failed to verify that the client cycling owns the old cycling key.")]
    FailedToVerifyOldKeyDuringCycle,
    #[error("Failed to verify that the k-proof during registration was generated correctly.")]
    FailedToVerifyKProof,
    #[error("Failed to verify that the a-proof during registration was generated by an admin.")]
    FailedToVerifyAProof
}

#[derive(thiserror::Error, Debug)]
pub enum ClientProtocolError {
    #[error("Failed to generate the digital signing key pair for cycling/registration")]
    FailedToGenerateDsaPair,
    #[error("Failed to generate the decap key/encap key pair.")]
    FailedToGenerateKemPair,
    #[error("Failed to verify the server signature on the cycle request response.")]
    InauthenticCycleResponse,
    #[error("Failed to verify the server signature on the token request response.")]
    InauthenticTokenResponse,
    #[error("Failed to decapsulate the ciphertext.")]
    DecapsulationError,
    #[error("Failed to sign a message with the client private key.")]
    FailedToSignRequest,
    #[error("Failed to generate the k-proof on the original registration request.")]
    KProofSignError,
    #[error("Failed to generate the a-proof on the original registration request.")]
    AProofSignError,
    #[error("Failed to verify the identity hash which is part of the registration process.")]
    FailedToVerifyIdentityHash,
    #[error("Failed to verify the server signature on the register response.")]
    InauthenticRegisterResponse,
    #[error("Failed to verify the hash returned by the server on the cycle response.")]
    FailedToVerifyCycleHash,
    #[error("Failed to verify the approval hash, as in, the exact hash was not reconstructed on the client end.")]
    FailedToReconstructApprovalHash
}


impl Into<String> for ClientProtocolError {
    fn into(self) -> String {
        self.to_string()
    }
}

impl Into<String> for ServerProtocolError {
    fn into(self) -> String {
        self.to_string()
    }
}